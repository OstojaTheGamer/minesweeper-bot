#ifndef CHOOSE_MINE_H_INCLUDED
#define CHOOSE_MINE_H_INCLUDED
#include "global_var.h"

using namespace std;

int number[9] = {1, 8, 28, 56, 70, 56, 28, 8, 1};

int ichi[8][1] = {{0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}};

int ni[28][2] =
{
    {0, 1}, {0, 2}, {0, 3}, {0, 4}, {0, 5}, {0, 6}, {0, 7},
    {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7},
    {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7},
    {3, 4}, {3, 5}, {3, 6}, {3, 7},
    {4, 5}, {4, 6}, {4, 7},
    {5, 6}, {5, 7},
    {6, 7}
};

int san[56][3] =
{
    {0, 1, 2}, {0, 1, 3}, {0, 1, 4}, {0, 1, 5}, {0, 1, 6}, {0, 1, 7}, {0, 2, 3}, {0, 2, 4}, {0, 2, 5}, {0, 2, 6}, {0, 2, 7}, {0, 3, 4}, {0, 3, 5}, {0, 3, 6}, {0, 3, 7},
    {0, 4, 5}, {0, 4, 6}, {0, 4, 7}, {0, 5, 6}, {0, 5, 7}, {0, 6, 7},
    {1, 2, 3}, {1, 2, 4}, {1, 2, 6}, {1, 2, 7}, {1, 3, 4}, {1, 3, 5}, {1, 3, 6}, {1, 3, 7}, {1, 4, 5}, {1, 4, 6}, {1, 4, 7}, {1, 5, 6}, {1, 5, 7}, {1, 6, 7},
    {2, 3, 4}, {2, 3, 5}, {2, 3, 6}, {2, 3, 7}, {2, 4, 5}, {2, 4, 6}, {2, 4, 7}, {2, 5, 6}, {2, 5, 7}, {2, 6, 7},
    {3, 4, 5}, {3, 4, 6}, {3, 4, 7}, {3, 5, 6}, {3, 5, 7}, {3, 6, 7},
    {4, 5, 6}, {4, 5, 7}, {4, 6, 7},
    {5, 6, 7}
};

int yon[70][4] =
{
    {0, 1, 2, 3}, {0, 1, 2, 4}, {0, 1, 2, 5}, {0, 1, 2, 6}, {0, 1, 2, 7}, {0, 1, 3, 4}, {0, 1, 3, 5}, {0, 1, 3, 6}, {0, 1, 3, 7}, {0, 1, 4, 5}, {0, 1, 4, 6}, {0, 1, 4, 7}, {0, 1, 5, 6}, {0, 1, 5, 7},
    {0, 1, 6, 7}, {0, 2, 3, 4}, {0, 2, 3, 5}, {0, 2, 3, 6}, {0, 2, 3, 7}, {0, 2, 4, 5}, {0, 2, 4, 6}, {0, 2, 4, 7}, {0, 2, 5, 6}, {0, 2, 5, 7}, {0, 2, 6, 7}, {0, 3, 4, 5}, {0, 3, 4, 6}, {0, 3, 4, 7},
    {0, 3, 5, 6}, {0, 3, 5, 7}, {0, 3, 6, 7}, {0, 4, 5, 6}, {0, 4, 5, 7}, {0, 4, 6, 7}, {0, 5, 6, 7},
    {1, 2, 3, 4}, {1, 2, 3, 5}, {1, 2, 3, 6}, {1, 2, 3, 7}, {1, 2, 4, 5}, {1, 2, 4, 6}, {1, 2, 4, 7}, {1, 2, 5, 6}, {1, 2, 5, 7}, {1, 2, 6, 7}, {1, 3, 4, 5}, {1, 3, 4, 6}, {1, 3, 4, 7}, {1, 3, 5, 6},
    {1, 3, 5, 7}, {1, 3, 6, 7}, {1, 4, 5, 6}, {1, 4, 5, 7}, {1, 4, 6, 7}, {1, 5, 6, 7},
    {2, 3, 4, 5}, {2, 3, 4, 6}, {2, 3, 4, 7}, {2, 3, 5, 6}, {2, 3, 5, 7}, {2, 3, 6, 7}, {2, 4, 5, 6}, {2, 4, 5, 7}, {2, 4, 6, 7}, {2, 5, 6, 7},
    {3, 4, 5, 6}, {3, 4, 5, 7}, {3, 4, 6, 7}, {3, 5, 6, 7},
    {4, 5, 6, 7}
};

int go[56][5] =
{
    {0, 1, 2, 3, 4}, {0, 1, 2, 3, 5}, {0, 1, 2, 3, 6}, {0, 1, 2, 3, 7}, {0, 1, 2, 4, 5}, {0, 1, 2, 4, 6}, {0, 1, 2, 4, 7}, {0, 1, 2, 5, 6}, {0, 1, 2, 5, 7}, {0, 1, 2, 6, 7}, {0, 1, 3, 4, 5},
    {0, 1, 3, 4, 6}, {0, 1, 3, 4, 7}, {0, 1, 3, 5, 6}, {0, 1, 3, 5, 7}, {0, 1, 3, 6, 7}, {0, 1, 4, 5, 6}, {0, 1, 4, 5, 7}, {0, 1, 4, 6, 7}, {0, 1, 5, 6, 7},
    {0, 2, 3, 4, 5}, {0, 2, 3, 4, 6}, {0, 2, 3, 4, 7}, {0, 2, 3, 5, 6}, {0, 2, 3, 5, 7}, {0, 2, 3, 6, 7}, {0, 2, 4, 5, 6}, {0, 2, 4, 5, 7}, {0, 2, 4, 6, 7}, {0, 2, 5, 6, 7},
    {0, 3, 4, 5, 6}, {0, 3, 4, 5, 7}, {0, 3, 4, 6, 7}, {0, 3, 5, 6, 7}, {0, 4, 5, 6, 7},
    {1, 2, 3, 4, 5}, {1, 2, 3, 4, 6}, {1, 2, 3, 4, 7}, {1, 2, 3, 5, 6}, {1, 2, 3, 5, 7}, {1, 2, 3, 6, 7}, {1, 2, 4, 5, 6}, {1, 2, 4, 5, 7}, {1, 2, 4, 6, 7}, {1, 2, 5, 6, 7},
    {1, 3, 4, 5, 6}, {1, 3, 4, 5, 7}, {1, 3, 4, 6, 7}, {1, 3, 5, 6, 7}, {1, 4, 5, 6, 7},
    {2, 3, 4, 5, 6}, {2, 3, 4, 5, 7}, {2, 3, 4, 6, 7}, {2, 3, 5, 6, 7}, {2, 4, 5, 6, 7},
    {3, 4, 5, 6, 7}
};

int roku[28][6] =
{
    {0, 1, 2, 3, 4, 5}, {0, 1, 2, 3, 4, 6}, {0, 1, 2, 3, 4, 7}, {0, 1, 2, 3, 5, 6}, {0, 1, 2, 3, 5, 7}, {0, 1, 2, 3, 6, 7}, {0, 1, 2, 4, 5, 6}, {0, 1, 2, 4, 5, 7}, {0, 1, 2, 4, 6, 7}, {0, 1, 2, 5, 6, 7}, {0, 1, 3, 4, 5, 6},
    {0, 1, 3, 4, 5, 7}, {0, 1, 3, 4, 6, 7}, {0, 1, 3, 5, 6, 7}, {0, 1, 4, 5, 6, 7}, {0, 2, 3, 4, 5, 6}, {0, 2, 3, 4, 5, 7}, {0, 2, 3, 4, 6, 7}, {0, 2, 3, 5, 6, 7}, {0, 2, 4, 5, 6, 7}, {0, 3, 4, 5, 6, 7},
    {1, 2, 3, 4, 5, 6}, {1, 2, 3, 4, 5, 7}, {1, 2, 3, 4, 6, 7}, {1, 2, 3, 5, 6, 7}, {1, 2, 4, 5, 6, 7}, {1, 3, 4, 5, 6, 7},
    {2, 3, 4, 5, 6, 7}
};

int nana[8][7] =
{
    {0, 1, 2, 3, 4, 5, 6},
    {0, 1, 2, 3, 4, 5, 7},
    {0, 1, 2, 3, 4, 6, 7},
    {0, 1, 2, 3, 5, 6, 7},
    {0, 1, 2, 4, 5, 6, 7},
    {0, 1, 3, 4, 5, 6, 7},
    {0, 2, 3, 4, 5, 6, 7},
    {1, 2, 3, 4, 5, 6, 7}
};

int hachi[1][8] = {{0, 1, 2, 3, 4, 5, 6, 7}};

vector <vector<int>> mine_list[9];

void init_mine_list()
{
    int i, j, k;
    for (i = 1; i <= 8; i++)
    {
        for (j = 0; j < number[i]; j++)
        {
            mine_list[i].push_back({});
            for (k = 0; k < i; k++)
            {
                switch (i)
                {
                    case 1: mine_list[i][j].push_back(ichi[j][k]);  break;
                    case 2: mine_list[i][j].push_back(ni[j][k]);    break;
                    case 3: mine_list[i][j].push_back(san[j][k]);   break;
                    case 4: mine_list[i][j].push_back(yon[j][k]);   break;
                    case 5: mine_list[i][j].push_back(go[j][k]);    break;
                    case 6: mine_list[i][j].push_back(roku[j][k]);  break;
                    case 7: mine_list[i][j].push_back(nana[j][k]);  break;
                    case 8: mine_list[i][j].push_back(hachi[j][k]); break;
                }
            }
        }
    }
}

void select_mine(int m, int val)
{
    if (!m)
    {
        current_combination.push_back({});
        return;
    }
    int i;
    for (i = 0; i < number[m]; i++)
        if (mine_list[m][i].back() < val) current_combination.push_back(mine_list[m][i]);
}

void revert(bool a)
{
    int i;
    if (a)
        for (i = 0; i < curx.size(); i++)
        {
            if (grid[curx[i]][cury[i]] == 12)
            {
                //printf("\t\tClear can appear on: %d %d\n", curx[i] + 1, cury[i] + 1);
                wut_mine[i] = 0;
            }
            else if (grid[curx[i]][cury[i]] == 10)
            {
                //printf("\t\tMine can appear on: %d %d\n", curx[i] + 1, cury[i] + 1);
                wut_nomine[i] = 0;
            }
        }
    for (i = 0; i < curx.size(); i++) grid[curx[i]][cury[i]] = 9;
    current_combination.pop_back();
}

#endif // CHOOSE_MINE_H_INCLUDED
